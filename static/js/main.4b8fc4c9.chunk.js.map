{"version":3,"sources":["components/Posts.jsx","components/Paging.jsx","App.jsx","index.js"],"names":["theme","createTheme","palette","type","useStyles","makeStyles","root","flexGrow","overflow","padding","spacing","color","paper","maxWidth","margin","Posts","posts","loading","classes","LinearProgress","ThemeProvider","className","Typography","variant","component","align","map","post","Paper","Grid","container","wrap","item","Avatar","body","charAt","toUpperCase","xs","id","primary","main","red","secondary","marginTop","justifyContent","display","marginBottom","ul","Paging","postsPerPage","totalPosts","paginate","Pagination","count","Math","ceil","showFirstButton","showLastButton","onChange","event","value","App","useState","setPosts","setLoading","currentPage","setCurrentPage","useEffect","a","axios","get","res","data","fetchPosts","indexOfLastPost","indexOfFirstPost","currentPosts","slice","length","pageNumber","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4b8fc4c9.chunk.js","sourcesContent":["import React from \"react\"\r\nimport Paper from \"@material-ui/core/Paper\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport Avatar from \"@material-ui/core/Avatar\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\nimport { createTheme, ThemeProvider } from \"@material-ui/core/styles\"\r\nimport { LinearProgress } from \"@material-ui/core\"\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    type: \"dark\",\r\n  },\r\n})\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    overflow: \"hidden\",\r\n    padding: theme.spacing(0, 3),\r\n    color: \"white\",\r\n  },\r\n  paper: {\r\n    maxWidth: 850,\r\n    margin: `${theme.spacing(1)}px auto`,\r\n    padding: theme.spacing(2),\r\n  },\r\n}))\r\n\r\nconst Posts = ({ posts, loading }) => {\r\n  const classes = useStyles()\r\n  if (loading) {\r\n    return <LinearProgress />\r\n  }\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <div className={classes.root}>\r\n        <Typography variant=\"h3\" component=\"div\" align=\"center\">\r\n          React Pagination\r\n        </Typography>\r\n        {posts.map((post) => (\r\n          <Paper className={classes.paper} key={post.id}>\r\n            <Grid container wrap=\"nowrap\" spacing={2}>\r\n              <Grid item>\r\n                <Avatar>{post.body.charAt(0).toUpperCase()}</Avatar>\r\n              </Grid>\r\n              <Grid item xs>\r\n                <Typography>{post.body}</Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Paper>\r\n        ))}\r\n      </div>\r\n    </ThemeProvider>\r\n  )\r\n}\r\n\r\nexport default Posts\r\n","import React from \"react\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport Pagination from \"@material-ui/lab/Pagination\"\r\nimport { createTheme } from \"@material-ui/core/styles\"\r\nimport { ThemeProvider } from \"@material-ui/styles\"\r\nimport { red } from \"@material-ui/core/colors\"\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: red[900],\r\n    },\r\n    secondary: {\r\n      main: \"#43ff00\",\r\n    },\r\n  },\r\n})\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      marginTop: theme.spacing(2),\r\n      justifyContent: \"center\",\r\n      display: \"flex\",\r\n      marginBottom: theme.spacing(2),\r\n    },\r\n  },\r\n  ul: {\r\n    \"& .MuiPaginationItem-root\": {\r\n      color: \"#fff\",\r\n    },\r\n  },\r\n}))\r\n\r\nconst Paging = ({ postsPerPage, totalPosts, paginate }) => {\r\n  const classes = useStyles()\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <div className={classes.root}>\r\n        <Pagination\r\n          classes={{ ul: classes.ul }}\r\n          count={Math.ceil(totalPosts / postsPerPage)}\r\n          variant=\"outlined\"\r\n          showFirstButton\r\n          showLastButton\r\n          color=\"secondary\"\r\n          onChange={(event, value) => paginate(value)}\r\n        />\r\n      </div>\r\n    </ThemeProvider>\r\n  )\r\n}\r\n\r\nexport default Paging\r\n","import { useState, useEffect } from \"react\"\nimport axios from \"axios\"\nimport \"./App.css\"\nimport Posts from \"./components/Posts\"\nimport Paging from \"./components/Paging\"\n\nfunction App() {\n  const [posts, setPosts] = useState([])\n  const [loading, setLoading] = useState(false)\n  const [currentPage, setCurrentPage] = useState(1)\n  const [postsPerPage] = useState(6)\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      setLoading(true)\n      const res = await axios.get(\"https://jsonplaceholder.typicode.com/posts\")\n      setPosts(res.data)\n      setLoading(false)\n    }\n    fetchPosts()\n  }, [])\n\n  const indexOfLastPost = currentPage * postsPerPage\n  const indexOfFirstPost = indexOfLastPost - postsPerPage\n  const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost)\n\n  const paginate = (pageNumber) => setCurrentPage(pageNumber)\n\n  return (\n    <>\n      <Posts posts={currentPosts} loading={loading} />\n      <Paging postsPerPage={postsPerPage} totalPosts={posts.length} paginate={paginate} />\n    </>\n  )\n}\n\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}